[gd_scene load_steps=4 format=1]

[sub_resource type="GDScript" id=3]

script/source = "extends Container

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

export var path_to_target = \"Node2D/king\"

func _ready():
	# Called every time the node is added to the scene.
	# Initialization here
	pass
"

[sub_resource type="StyleBoxEmpty" id=1]

content_margin/left = -1.0
content_margin/right = -1.0
content_margin/top = -1.0
content_margin/bottom = -1.0

[sub_resource type="GDScript" id=2]

script/source = "extends Panel

# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"
var target	#Entity used to get health value

var max_health = 100
var current_health = 100

var size = Vector2()
var segments = 20
var segment_height = 0
var segment_width = 0

var spacing = 2

var filled_solid_color = Color(1, 0, 0)
var filled_line_color = Color(0, 0, 0)
var filled_line_width = 2

var empty_solid_color = Color(1, 0, 0)
var empty_line_color = Color(0.7, 0.7, 0.9)
var empty_line_width = 2

func _ready():
	size = get_size() 
	segment_height = size.height
	segment_width = size.width / segments
	target = get_tree().get_root().get_node(get_parent().path_to_target)
	# Called every time the node is added to the scene.
	# Initialization here
	pass

func _draw():
	#var box = Rect2( Vector2(), size )
	#draw_background_color(box, color)
	draw_bar()
	pass

#func draw_background_color(r, c):
#	draw_rect(r, c)

func draw_bar():
	current_health = target.get_health();
	print(current_health)
	var i = 0;
	var vertex1 = Vector2()
	var vertex2 = Vector2()
	var vertex3 = Vector2()
	var vertex4 = Vector2()
	var filled_segments = current_health * segments / max_health
	
	while(i < segments):
		var is_next_box_filled = (i < filled_segments)
		vertex1 = Vector2(0 + i * segment_width, 0)
		vertex2 = Vector2(0 + i * segment_width, segment_height)
		vertex3 = Vector2(segment_width + i * segment_width - spacing, segment_height) 
		vertex4 = Vector2(segment_width + i * segment_width - spacing, 0)
		
		if(is_next_box_filled):
			draw_box(vertex1, vertex2, vertex3, vertex4, filled_line_color, filled_line_width, true, filled_solid_color)
		else:
			draw_box(vertex1, vertex2, vertex3, vertex4, empty_line_color, empty_line_width, false)
			
		i += 1

#	vertex1 vertex4
#	vertex2 vertex3
func draw_box(v1, v2, v3, v4, line_color, border_width, filled, fill_color=filled_solid_color):
	if(filled): draw_rect(Rect2(v1, Vector2(segment_width - spacing, segment_height)), fill_color)
	draw_line(v1, v2, line_color, border_width)
	draw_line(v2, v3, line_color, border_width)
	draw_line(v3, v4, line_color, border_width)
	draw_line(v4, v1, line_color, border_width)"

[node name="Healthbar" type="Container"]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 0.0
margin/top = 0.0
margin/right = 0.0
margin/bottom = 0.0
script/script = SubResource( 3 )
path_to_target = "Node2D/king"

[node name="Panel" type="Panel" parent="."]

focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = 134.0
margin/top = 0.0
margin/right = 334.0
margin/bottom = 20.0
custom_styles/panel = SubResource( 1 )
script/script = SubResource( 2 )


